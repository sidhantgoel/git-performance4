{
  "pluginType": "DB",
  "pluginId": "postgres-plugin",
  "unpublishedAction": {
    "name": "fetchLast100PRruns",
    "datasource": {
      "name": "performance-supabase-satish",
      "pluginId": "postgres-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Your PR vs Rest",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "SELECT id, value, label, repo from ((select \n-- Max(created_at) as created_at,\n-- Min(author) as author,\n-- Min(commit_id) as commit_id,\n-- Min(branch) as branch,\nMax(id) as id,\n-- Max(pr_title) as title,\npull_request_id as value, \nCONCAT(pull_request_id,'-',SUBSTRING(Max(pr_title),1,64), CONCAT(' (',(array_agg(author))[1],')', (CASE WHEN bool_or(is_merge_commit)=true THEN ' ⭐' ELSE '' END))) as label,\nrepo\nfrom run_meta \nWHERE pull_request_id <> -1\nAND (author ILIKE '{{prSelect.filterText ?? ''}}%'\nOR pr_title ILIKE '{{prSelect.filterText ?? ''}}%'\nOR pull_request_id::text like '{{prSelect.filterText ?? ''}}%')\nAND repo='{{RepoSelect.selectedOptionValue}}'\nAND is_active\nGROUP BY pull_request_id, repo\n\nORDER BY id DESC  limit 100)\n\n{{(appsmith.URL.queryParams.pr) ? `\nUNION\n(SELECT\nMax(id) as id,\npull_request_id as value,\nCONCAT(pull_request_id,'-',SUBSTRING(Max(pr_title),1,64), CONCAT(' (',(array_agg(author))[1],')', (CASE WHEN bool_or(is_merge_commit)=true THEN ' ⭐' ELSE '' END))) as label, repo\nfrom run_meta WHERE\npull_request_id::text = '${appsmith.URL.queryParams.pr}'\nAND is_active\n${appsmith.URL.queryParams.runId ? ` AND gh_run_id = ${appsmith.URL.queryParams.runId.split('_')[0]} AND gh_run_attempt = ${appsmith.URL.queryParams.runId.split('_')[1]}` : ''}\nGROUP BY pull_request_id, repo\n\nORDER BY id DESC  limit 100)` : ''}}) as combinedResults ORDER BY id DESC",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": false
        }
      ]
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "(appsmith.URL.queryParams.pr) ? `\nUNION\n(SELECT\nMax(id) as id,\npull_request_id as value,\nCONCAT(pull_request_id,'-',SUBSTRING(Max(pr_title),1,64), CONCAT(' (',(array_agg(author))[1],')', (CASE WHEN bool_or(is_merge_commit)=true THEN ' ⭐' ELSE '' END))) as label, repo\nfrom run_meta WHERE\npull_request_id::text = '${appsmith.URL.queryParams.pr}'\nAND is_active\n${appsmith.URL.queryParams.runId ? ` AND gh_run_id = ${appsmith.URL.queryParams.runId.split('_')[0]} AND gh_run_attempt = ${appsmith.URL.queryParams.runId.split('_')[1]}` : ''}\nGROUP BY pull_request_id, repo\n\nORDER BY id DESC  limit 100)` : ''",
      "RepoSelect.selectedOptionValue",
      "prSelect.filterText ?? ''"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Your PR vs Rest_fetchLast100PRruns",
  "deleted": false,
  "gitSyncId": "63465d4289020c7ac296d080_63872002873bbf7d62bd7ae4"
}