/*SELECT 
cast(AVG(median) as decimal(10,2)) as median,
cast(AVG(min) as decimal(10, 2)) as min,
cast(STDDEV(median) as decimal(10,2)) as SD,
cast(STDDEV(min) as decimal(10, 2)) as SDmin,
action,
metric from 
(SELECT action, metric, meta, max(run_metas.created_at) as created_at, PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY value) as median, MIN(value) as min 
from run join (select id, created_at from run_meta where is_merge_commit {{Utils.getCurrentRunMetaId() ? `and id < ${Utils.getCurrentRunMetaId()} ` : ''}} AND base_branch = 'release' and is_anomaly=false  order by created_at DESC limit 10 offset 0) as run_metas on run.meta = run_metas.id
WHERE metric IN ({{Utils.getMetricsToShow()}})
GROUP BY meta, action, metric ORDER BY action, metric, created_at DESC) as medians GROUP BY action, metric;*/
SELECT
ARRAY_AGG(meta) as metas,
cast(AVG(median) as decimal(10,2)) as median,
cast(AVG(min) as decimal(10, 2)) as min,
cast(STDDEV(median) as decimal(10,2)) as SD,
cast(STDDEV(min) as decimal(10, 2)) as SDmin,
action,
  metric from 
  (SELECT action, metric, meta,  PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY value) as median, MIN(value) as min 
  from run 
  where meta in (select id from run_meta WHERE is_merge_commit {{this.params.metaId ? `AND id < ${this.params.metaId} ` : ''}} AND base_branch='release' and is_anomaly=false and is_active order by created_at DESC limit 3 offset 0)
  and metric IN ({{Utils.getMetricsToShow()}})
  GROUP BY meta, action, metric) as medians GROUP BY action, metric;